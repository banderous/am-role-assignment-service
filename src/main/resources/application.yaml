server:
  port: ${PORT:4096}

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'health'

#If you use a database then uncomment below lines and update db properties accordingly

security:
  anonymousPaths:
    - "/"
    - "/health"
    - "/health/liveness"
    - "/actuator/**"
    - "/loggers/**"
    - "/swagger-ui.html"
    - "/swagger-resources/**"
    - "/v2/api-docs"
    - "/webjars/springfox-swagger-ui/**"
    - "/search/**"
    - "/csrf"
    - "/error"
    - "/favicon.ico"
  authorisedRoles:
  authorisedServices: ${ROLE_ASSIGNMENT_S2S_AUTHORISED_SERVICES:ccd_gw}

spring:
  application:
    name: Role Assignment Service
  jackson:
    default-property-inclusion: NON_NULL
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        jdbc:
          lob:
           non_contextual_creation: true
  liquibase:
    enabled: ${ENABLE_DB_MIGRATE:true}
    change-log: classpath:/db/changelog/db.changelog-master.xml


  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5451}/${POSTGRES_NAME:role_assignment}${POSTGRES_CONNECTION_OPTIONS:}
    username: ${POSTGRES_USERNAME:am}
    password: ${POSTGRES_PASSWORD:am}
    properties:
      charSet: UTFh-8




### dependency configuration
auth.provider.service.client.baseUrl: ${IDAM_S2S_URL:http://localhost:4502}
idam:
  s2s-auth:
    # AAAAAAAAAAAAAAAA
    totp_secret: ${AM_ROLE_ASSIGNMENT_SERVICE_SECRET:DummyKey}
    microservice: am-role-assignment-service
    url: ${IDAM_S2S_URL:http://localhost:4502}

auth.idam.client.baseUrl: ${IDAM_USER_URL:http://localhost:5000}
testS2S:
  api:
    url: "/testS2SAuthorization"
integrationTest:
  api:
    url: "/"


swaggerUrl: ${ROLE_ASSIGNMENT_SWAGGER_AM_URL:localhost:4096}
roleAssignmentUrl: ${TEST_URL:http://localhost:4096}
