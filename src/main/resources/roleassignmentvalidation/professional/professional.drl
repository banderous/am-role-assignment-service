package roleassignmentvalidation

rule "case access admin can assign case roles within the organisation"
	when

		$request : Request ( process == "professionalAccess" )

		$role : RequestedRole ( roleName == "solicitor",
		                        roleType == RoleAssignment.RoleType.CASE_ROLE,
		                        grantType == RoleAssignment.GrantType.SPECIFIC,
		                        $organisationId : attributes["organisationId"] )

		Case ( id == $role.attributes.caseId,
		       organisationId == $organisationId)

		ExistingRole ( actorId == $request.requestorId,
		               roleName == "case-access-admin",
		               roleType == RoleAssignment.RoleType.ORGANISATIONAL_ROLE,
		               attributes.organisationId == $organisationId )

		ExistingRole ( actorId == $role.actorId,
		               roleName == "solicitor",
		               roleType == RoleAssignment.RoleType.IDAM_ROLE )

	then

		$role.approve(drools.getRule().getName());

end

//******* create role reuest validation rule *****
// clientId(service id from s2s token ) must be am_role_assignment_service
// requesttype must be create
// status must be create
//process == SPECIFIC
// if replaceExisting is true then process & reference must not be null
//if requestType == create, then roleassifgnmentId should be null/empty.rule
//if requestType == delete and delete endpoint is based on assignment id, then roleassifgnmentId must not be null.
// created and lastupdatedtime should be not null.
// request Id should not be null.

// ********* Role Assignment validation ***** create role assignmenment validation rule

// role assignment Id should not be null.
// if clint id in request == xui then role type in assignment must be == CASE
// if client id in request == organization_mapping service then role type in assignment must be == ORGANIZATION
// roleName should belong to  existing  Role model object
// The Requester.Classification shold be >= roleassignment.clasiffication
// request.process dhould be == roleassgnment.grantType
// status must be create
// beginTime >= currentTime , endTime >= currentTime & endTime > beginTime
